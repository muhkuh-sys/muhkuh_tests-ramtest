# -*- coding: utf-8 -*-
#-------------------------------------------------------------------------#
#   Copyright (C) 2012 by Christoph Thelen                                #
#   doc_bacardi@users.sourceforge.net                                     #
#                                                                         #
#   This program is free software; you can redistribute it and/or modify  #
#   it under the terms of the GNU General Public License as published by  #
#   the Free Software Foundation; either version 2 of the License, or     #
#   (at your option) any later version.                                   #
#                                                                         #
#   This program is distributed in the hope that it will be useful,       #
#   but WITHOUT ANY WARRANTY; without even the implied warranty of        #
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         #
#   GNU General Public License for more details.                          #
#                                                                         #
#   You should have received a copy of the GNU General Public License     #
#   along with this program; if not, write to the                         #
#   Free Software Foundation, Inc.,                                       #
#   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             #
#-------------------------------------------------------------------------#


#----------------------------------------------------------------------------
#
# Import all required objects.
#
Import('env_default')
Import('env_netx4000_default', 'env_netx500_default', 'env_netx56_default', 'env_netx50_default', 'env_netx10_default')
Import('platform_lib_netx4000', 'platform_lib_netx500', 'platform_lib_netx56', 'platform_lib_netx50', 'platform_lib_netx10')


#----------------------------------------------------------------------------
# This is the list of sources. The elements must be separated with whitespace
# (i.e. spaces, tabs, newlines). The amount of whitespace does not matter.
sources_common = """
	src/header.c
	src/ramtest.c
	src/random_burst.s
	src/ramtest_perf.c
	src/performance_test.S
"""

sources_test = """
	src/init_netx_test.S
	src/main_test.c
	src/netx_test.c
"""

sources_standalone = """
	src/init_standalone.S
	src/main_standalone.c
"""

sources_standalone_netx4000_cr7 = """
	src/netx4000/init_standalone_cr7.S
	src/main_standalone_netx4000.c
	src/main_standalone_common.c
"""

sources_standalone_netx4000_ca9 = """
	src/netx4000/init_standalone_ca9.S
	src/main_standalone_netx4000.c
	src/main_standalone_common.c
"""

sources_standalone_netx4000_cr7_cached = """
	src/netx4000/init_standalone_cr7_cache_enable.S
	src/main_standalone_netx4000.c
	src/main_standalone_common.c
"""

sources_standalone_netx4000_ca9_cached = """
	src/netx4000/CA9/ca9_init.S
	src/netx4000/CA9/v7a.S
	src/netx4000/CA9/mmu.c
	src/netx4000/CA9/MP_SCU.s
	src/main_standalone_netx4000.c
	src/main_standalone_common.c
"""

sources_debugger = """
	src/init_debugger.S
	src/main_standalone.c
"""

sources_sim = """
	src/init_simu.S
	src/main_simu.c
	src/setup_sdram.c
	src/ramtest_perf.c
	src/performance_test.S
"""

# special files for netX 4000 bootup
sources_cr7_openfirewalls = """
	src/netx4000/cr7_open_netx4000_firewalls.S
"""

sources_cr7_init_cache = """
	src/netx4000/cr7_init_cache.s
"""

sources_ca9_init_cache = """
	src/netx4000/ca9_init_cache.S
"""

sources_cr7_sync_ca9 = """
	src/netx4000/cr7_sync_ca9.S
"""


#----------------------------------------------------------------------------
#
# Build the muhkuh test version.
#
aCppPath = ['src', '#platform/src', '#platform/src/lib', '#targets/version']


env_netx4000_t = env_netx4000_default.Clone()
env_netx4000_t.Replace(LDFILE = 'src/netx4000/netx4000_cr7_llram.ld')
env_netx4000_t.Append(CPPPATH = aCppPath)
src_netx4000_t = env_netx4000_t.SetBuildPath('targets/netx4000/muhkuh_test', 'src', sources_common+sources_test)
elf_netx4000_t = env_netx4000_t.Elf('targets/netx4000/muhkuh_test/ramtest.elf', src_netx4000_t + platform_lib_netx4000)
ramtest_netx4000 = env_netx4000_t.ObjCopy('targets/netx4000/muhkuh_test/ramtest_netx4000.bin', elf_netx4000_t)

env_netx500_t = env_netx500_default.Clone()
env_netx500_t.Replace(LDFILE = 'src/netx500/netx500.ld')
env_netx500_t.Append(CPPPATH = aCppPath)
src_netx500_t = env_netx500_t.SetBuildPath('targets/netx500/muhkuh_test', 'src', sources_common+sources_test)
elf_netx500_t = env_netx500_t.Elf('targets/netx500/muhkuh_test/ramtest.elf', src_netx500_t + platform_lib_netx500)
ramtest_netx500 = env_netx500_t.ObjCopy('targets/netx500/muhkuh_test/ramtest_netx500.bin', elf_netx500_t)

env_netx500_sim = env_netx500_default.Clone()
env_netx500_sim.Replace(LDFILE = 'src/netx500/netx500.ld')
env_netx500_sim.Append(CPPPATH = aCppPath)
env_netx500_sim.Append(CPPDEFINES = [['SIMULATION', '1']])
src_netx500_sim = env_netx500_sim.SetBuildPath('targets/netx500/sim', 'src',  sources_sim)
elf_netx500_sim = env_netx500_sim.Elf('targets/netx500/sim/ramtest_netx500.elf', src_netx500_sim + platform_lib_netx500)
ramtest_netx500_sim = env_netx500_sim.ObjCopy('targets/netx500/sim/ramtest_netx500.bin', elf_netx500_sim)

env_netx56_t = env_netx56_default.Clone()
env_netx56_t.Replace(LDFILE = 'src/netx56/netx56.ld')
env_netx56_t.Append(CPPPATH = aCppPath)
src_netx56_t = env_netx56_t.SetBuildPath('targets/netx56/muhkuh_test', 'src', sources_common+sources_test)
elf_netx56_t = env_netx56_t.Elf('targets/netx56/muhkuh_test/ramtest.elf', src_netx56_t + platform_lib_netx56)
ramtest_netx56 = env_netx56_t.ObjCopy('targets/netx56/muhkuh_test/ramtest_netx56.bin', elf_netx56_t)

env_netx50_t = env_netx50_default.Clone()
env_netx50_t.Replace(LDFILE = 'src/netx50/netx50.ld')
env_netx50_t.Append(CPPPATH = aCppPath)
src_netx50_t = env_netx50_t.SetBuildPath('targets/netx50/muhkuh_test', 'src', sources_common+sources_test)
elf_netx50_t = env_netx50_t.Elf('targets/netx50/muhkuh_test/ramtest.elf', src_netx50_t + platform_lib_netx50)
ramtest_netx50 = env_netx50_t.ObjCopy('targets/netx50/muhkuh_test/ramtest_netx50.bin', elf_netx50_t)

env_netx10_t = env_netx10_default.Clone()
env_netx10_t.Replace(LDFILE = 'src/netx10/netx10.ld')
env_netx10_t.Append(CPPPATH = aCppPath)
src_netx10_t = env_netx10_t.SetBuildPath('targets/netx10/muhkuh_test', 'src', sources_common+sources_test)
elf_netx10_t = env_netx10_t.Elf('targets/netx10/muhkuh_test/ramtest.elf', src_netx10_t + platform_lib_netx10)
ramtest_netx10 = env_netx10_t.ObjCopy('targets/netx10/muhkuh_test/ramtest_netx10.bin', elf_netx10_t)

Export('ramtest_netx4000', 'ramtest_netx500', 'ramtest_netx56', 'ramtest_netx50', 'ramtest_netx10')




#----------------------------------------------------------------------------
#
# Build the standalone version. 
#

# open firewalls on cr7
env_netx4000_cr7_openfirewalls = env_netx4000_default.Clone()
env_netx4000_cr7_openfirewalls.Replace(LDFILE = 'src/netx4000/netx4000_cr7_llram.ld')
env_netx4000_cr7_openfirewalls.Append(CPPPATH = aCppPath)
src_netx4000_cr7_openfirewalls = env_netx4000_cr7_openfirewalls.SetBuildPath('targets/netx4000_openfirewalls', 'src', sources_cr7_openfirewalls)
elf_netx4000_cr7_openfirewalls = env_netx4000_cr7_openfirewalls.Elf('targets/netx4000_openfirewalls/netx4000_cr7_openfirewalls.elf', src_netx4000_cr7_openfirewalls)
txt_netx4000_cr7_openfirewalls = env_netx4000_cr7_openfirewalls.ObjDump('targets/netx4000_openfirewalls/netx4000_cr7_openfirewalls.txt', elf_netx4000_cr7_openfirewalls, OBJDUMP_FLAGS=['--disassemble', '--source', '--all-headers', '--wide'])

# enable caches and branch prediction on CR7
env_netx4000_cr7_init_cache = env_netx4000_default.Clone()
env_netx4000_cr7_init_cache.Replace(LDFILE = 'src/netx4000/netx4000_cr7_llram.ld')
env_netx4000_cr7_init_cache.Append(CPPPATH = aCppPath)
src_netx4000_cr7_init_cache = env_netx4000_cr7_init_cache.SetBuildPath('targets/netx4000_cr7_init_cache', 'src', sources_cr7_init_cache)
elf_netx4000_cr7_init_cache = env_netx4000_cr7_init_cache.Elf(         'targets/netx4000_cr7_init_cache/netx4000_cr7_init_cache.elf', src_netx4000_cr7_init_cache)
txt_netx4000_cr7_init_cache = env_netx4000_cr7_init_cache.ObjDump(     'targets/netx4000_cr7_init_cache/netx4000_cr7_init_cache.txt', elf_netx4000_cr7_init_cache, OBJDUMP_FLAGS=['--disassemble', '--source', '--all-headers', '--wide'])
bin_netx4000_cr7_init_cache = env_netx4000_cr7_init_cache.ObjCopy(     'targets/netx4000_cr7_init_cache/netx4000_cr7_init_cache.bin', elf_netx4000_cr7_init_cache)

# enable caches and branch prediction on CA9
# When done, overwrites CA9 firmware vector with 0x11UL 0x22UL. 
env_netx4000_ca9_init_cache = env_netx4000_default.Clone()
env_netx4000_ca9_init_cache.Replace(LDFILE = 'src/netx4000/netx4000_ca9_intram_rap0.ld')
env_netx4000_ca9_init_cache.Append(CPPPATH = aCppPath)
src_netx4000_ca9_init_cache = env_netx4000_ca9_init_cache.SetBuildPath('targets/netx4000_ca9_init_cache', 'src', sources_ca9_init_cache)
elf_netx4000_ca9_init_cache = env_netx4000_ca9_init_cache.Elf(         'targets/netx4000_ca9_init_cache/netx4000_ca9_init_cache.elf', src_netx4000_ca9_init_cache)
txt_netx4000_ca9_init_cache = env_netx4000_ca9_init_cache.ObjDump(     'targets/netx4000_ca9_init_cache/netx4000_ca9_init_cache.txt', elf_netx4000_ca9_init_cache, OBJDUMP_FLAGS=['--disassemble', '--source', '--all-headers', '--wide'])
bin_netx4000_ca9_init_cache = env_netx4000_ca9_init_cache.ObjCopy(     'targets/netx4000_ca9_init_cache/netx4000_ca9_init_cache.bin', elf_netx4000_ca9_init_cache)

# Wait on CR7 for cache enable on CA9 to complete.
env_netx4000_cr7_sync_ca9 = env_netx4000_default.Clone()
env_netx4000_cr7_sync_ca9.Replace(LDFILE = 'src/netx4000/netx4000_cr7_synca9.ld')
env_netx4000_cr7_sync_ca9.Append(CPPPATH = aCppPath)
src_netx4000_cr7_sync_ca9 = env_netx4000_cr7_sync_ca9.SetBuildPath('targets/netx4000_cr7_sync_ca9', 'src', sources_cr7_sync_ca9)
elf_netx4000_cr7_sync_ca9 = env_netx4000_cr7_sync_ca9.Elf(         'targets/netx4000_cr7_sync_ca9/netx4000_cr7_sync_ca9.elf', src_netx4000_cr7_sync_ca9)
txt_netx4000_cr7_sync_ca9 = env_netx4000_cr7_sync_ca9.ObjDump(     'targets/netx4000_cr7_sync_ca9/netx4000_cr7_sync_ca9.txt', elf_netx4000_cr7_sync_ca9, OBJDUMP_FLAGS=['--disassemble', '--source', '--all-headers', '--wide'])
bin_netx4000_cr7_sync_ca9 = env_netx4000_cr7_sync_ca9.ObjCopy(     'targets/netx4000_cr7_sync_ca9/netx4000_cr7_sync_ca9.bin', elf_netx4000_cr7_sync_ca9)





# ramtest for the CR7.
env_netx4000_s_cr7 = env_netx4000_default.Clone()
env_netx4000_s_cr7.Replace(LDFILE = 'src/netx4000/netx4000_cr7_llram.ld')
env_netx4000_s_cr7.Append(CPPPATH = aCppPath)
env_netx4000_s_cr7.Append(CPPDEFINES = [['CPU_CR7', '1']])
src_netx4000_s_cr7 = env_netx4000_s_cr7.SetBuildPath('targets/netx4000_cr7', 'src', sources_common+sources_standalone_netx4000_cr7)
elf_netx4000_s_cr7 = env_netx4000_s_cr7.Elf(         'targets/netx4000_cr7/netx4000_ramtest_cr7.elf', src_netx4000_s_cr7 + platform_lib_netx4000)
txt_netx4000_s_cr7 = env_netx4000_s_cr7.ObjDump(     'targets/netx4000_cr7/netx4000_ramtest_cr7.txt', elf_netx4000_s_cr7, OBJDUMP_FLAGS=['--disassemble', '--source', '--all-headers', '--wide'])
bin_netx4000_s_cr7 = env_netx4000_s_cr7.ObjCopy(     'targets/netx4000_cr7/netx4000_ramtest_cr7.bin', elf_netx4000_s_cr7)

# ramtest for CA9 core 0.
env_netx4000_s_ca9_core0 = env_netx4000_default.Clone()
env_netx4000_s_ca9_core0.Replace(LDFILE = 'src/netx4000/netx4000_ca9_intram_rap0.ld')
env_netx4000_s_ca9_core0.Append(CPPPATH = aCppPath)
env_netx4000_s_ca9_core0.Append(CPPPATH = ['src/netx4000'])
env_netx4000_s_ca9_core0.Append(CPPDEFINES = [['CPU_CA9']])
src_netx4000_s_ca9_core0 = env_netx4000_s_ca9_core0.SetBuildPath('targets/netx4000_ca9_core0', 'src', sources_common+sources_standalone_netx4000_ca9)
elf_netx4000_s_ca9_core0 = env_netx4000_s_ca9_core0.Elf(         'targets/netx4000_ca9_core0/netx4000_ramtest_ca9_core0.elf', src_netx4000_s_ca9_core0 + platform_lib_netx4000)
txt_netx4000_s_ca9_core0 = env_netx4000_s_ca9_core0.ObjDump(     'targets/netx4000_ca9_core0/netx4000_ramtest_ca9_core0.txt', elf_netx4000_s_ca9_core0, OBJDUMP_FLAGS=['--disassemble', '--source', '--all-headers', '--wide'])
bin_netx4000_s_ca9_core0 = env_netx4000_s_ca9_core0.ObjCopy(     'targets/netx4000_ca9_core0/netx4000_ramtest_ca9_core0.bin', elf_netx4000_s_ca9_core0)

# ramtest for CA9 core 1.
env_netx4000_s_ca9_core1 = env_netx4000_default.Clone()
env_netx4000_s_ca9_core1.Replace(LDFILE = 'src/netx4000/netx4000_ca9_intram_rap1.ld')
env_netx4000_s_ca9_core1.Append(CPPPATH = aCppPath)
env_netx4000_s_ca9_core1.Append(CPPPATH = ['src/netx4000'])
env_netx4000_s_ca9_core1.Append(CPPDEFINES = [['CPU_CA9', '1']])
src_netx4000_s_ca9_core1 = env_netx4000_s_ca9_core1.SetBuildPath('targets/netx4000_ca9_core1', 'src', sources_common+sources_standalone_netx4000_ca9)
elf_netx4000_s_ca9_core1 = env_netx4000_s_ca9_core1.Elf(         'targets/netx4000_ca9_core1/netx4000_ramtest_ca9_core1.elf', src_netx4000_s_ca9_core1 + platform_lib_netx4000)
txt_netx4000_s_ca9_core1 = env_netx4000_s_ca9_core1.ObjDump(     'targets/netx4000_ca9_core1/netx4000_ramtest_ca9_core1.txt', elf_netx4000_s_ca9_core1, OBJDUMP_FLAGS=['--disassemble', '--source', '--all-headers', '--wide'])
bin_netx4000_s_ca9_core1 = env_netx4000_s_ca9_core1.ObjCopy(     'targets/netx4000_ca9_core1/netx4000_ramtest_ca9_core1.bin', elf_netx4000_s_ca9_core1)




# ramtest for the CR7, cache is enabled in init.s
env_netx4000_s_cr7_cached = env_netx4000_default.Clone()
env_netx4000_s_cr7_cached.Replace(LDFILE = 'src/netx4000/netx4000_cr7_llram.ld')
env_netx4000_s_cr7_cached.Append(CPPPATH = aCppPath)
env_netx4000_s_cr7_cached.Append(CPPDEFINES = [['CPU_CR7', '1']])
src_netx4000_s_cr7_cached = env_netx4000_s_cr7_cached.SetBuildPath('targets/netx4000_cr7_cached', 'src', sources_common+sources_standalone_netx4000_cr7_cached)
elf_netx4000_s_cr7_cached = env_netx4000_s_cr7_cached.Elf(         'targets/netx4000_cr7_cached/netx4000_ramtest_cr7_cached.elf', src_netx4000_s_cr7_cached + platform_lib_netx4000)
txt_netx4000_s_cr7_cached = env_netx4000_s_cr7_cached.ObjDump(     'targets/netx4000_cr7_cached/netx4000_ramtest_cr7_cached.txt', elf_netx4000_s_cr7_cached, OBJDUMP_FLAGS=['--disassemble', '--source', '--all-headers', '--wide'])
bin_netx4000_s_cr7_cached = env_netx4000_s_cr7_cached.ObjCopy(     'targets/netx4000_cr7_cached/netx4000_ramtest_cr7_cached.bin', elf_netx4000_s_cr7_cached)

# ramtest for CA9 core 0, l1 cache is enabled in ca9_init.S
env_netx4000_s_ca9_core0_cached = env_netx4000_default.Clone()
env_netx4000_s_ca9_core0_cached.Replace(LDFILE = 'src/netx4000/netx4000_ca9_intram_rap0.ld')
env_netx4000_s_ca9_core0_cached.Append(CPPPATH = aCppPath)
env_netx4000_s_ca9_core0_cached.Append(CPPPATH = ['src/netx4000', 'src/netx4000/CA9', '#platform/src/netx4000'])
env_netx4000_s_ca9_core0_cached.Append(CPPDEFINES = [['CPU_CA9'], ['CA9_NO_L2C_ENABLE']])
src_netx4000_s_ca9_core0_cached = env_netx4000_s_ca9_core0_cached.SetBuildPath('targets/netx4000_ca9_core0_cached', 'src', sources_common+sources_standalone_netx4000_ca9_cached)
elf_netx4000_s_ca9_core0_cached = env_netx4000_s_ca9_core0_cached.Elf(         'targets/netx4000_ca9_core0_cached/netx4000_ramtest_ca9_core0_cached.elf', src_netx4000_s_ca9_core0_cached + platform_lib_netx4000)
txt_netx4000_s_ca9_core0_cached = env_netx4000_s_ca9_core0_cached.ObjDump(     'targets/netx4000_ca9_core0_cached/netx4000_ramtest_ca9_core0_cached.txt', elf_netx4000_s_ca9_core0_cached, OBJDUMP_FLAGS=['--disassemble', '--source', '--all-headers', '--wide'])
bin_netx4000_s_ca9_core0_cached = env_netx4000_s_ca9_core0_cached.ObjCopy(     'targets/netx4000_ca9_core0_cached/netx4000_ramtest_ca9_core0_cached.bin', elf_netx4000_s_ca9_core0_cached)

# ramtest for CA9 core 1, l1 cache is enabled in ca9_init.s
env_netx4000_s_ca9_core1_cached = env_netx4000_default.Clone()
env_netx4000_s_ca9_core1_cached.Replace(LDFILE = 'src/netx4000/netx4000_ca9_intram_rap1.ld')
env_netx4000_s_ca9_core1_cached.Append(CPPPATH = aCppPath)
env_netx4000_s_ca9_core1_cached.Append(CPPPATH = ['src/netx4000', 'src/netx4000/CA9', '#platform/src/netx4000'])
env_netx4000_s_ca9_core1_cached.Append(CPPDEFINES = [['CPU_CA9'], ['CA9_NO_L2C_ENABLE']])
src_netx4000_s_ca9_core1_cached = env_netx4000_s_ca9_core1_cached.SetBuildPath('targets/netx4000_ca9_core1_cached', 'src', sources_common+sources_standalone_netx4000_ca9_cached)
elf_netx4000_s_ca9_core1_cached = env_netx4000_s_ca9_core1_cached.Elf(         'targets/netx4000_ca9_core1_cached/netx4000_ramtest_ca9_core1_cached.elf', src_netx4000_s_ca9_core1_cached + platform_lib_netx4000)
txt_netx4000_s_ca9_core1_cached = env_netx4000_s_ca9_core1_cached.ObjDump(     'targets/netx4000_ca9_core1_cached/netx4000_ramtest_ca9_core1_cached.txt', elf_netx4000_s_ca9_core1_cached, OBJDUMP_FLAGS=['--disassemble', '--source', '--all-headers', '--wide'])
bin_netx4000_s_ca9_core1_cached = env_netx4000_s_ca9_core1_cached.ObjCopy(     'targets/netx4000_ca9_core1_cached/netx4000_ramtest_ca9_core1_cached.bin', elf_netx4000_s_ca9_core1_cached)

# ramtest for CA9 core 0, L1+L2 caches are enabled in ca9_init.s
env_netx4000_s_ca9_core0_cached_l2 = env_netx4000_default.Clone()
env_netx4000_s_ca9_core0_cached_l2.Replace(LDFILE = 'src/netx4000/netx4000_ca9_intram_rap0.ld')
env_netx4000_s_ca9_core0_cached_l2.Append(CPPPATH = aCppPath)
env_netx4000_s_ca9_core0_cached_l2.Append(CPPPATH = ['src/netx4000', 'src/netx4000/CA9', '#platform/src/netx4000'])
env_netx4000_s_ca9_core0_cached_l2.Append(CPPDEFINES = [['CPU_CA9']])
src_netx4000_s_ca9_core0_cached_l2 = env_netx4000_s_ca9_core0_cached_l2.SetBuildPath('targets/netx4000_ca9_core0_cached_l2', 'src', sources_common+sources_standalone_netx4000_ca9_cached)
elf_netx4000_s_ca9_core0_cached_l2 = env_netx4000_s_ca9_core0_cached_l2.Elf(         'targets/netx4000_ca9_core0_cached_l2/netx4000_ramtest_ca9_core0_cached_l2.elf', src_netx4000_s_ca9_core0_cached_l2 + platform_lib_netx4000)
txt_netx4000_s_ca9_core0_cached_l2 = env_netx4000_s_ca9_core0_cached_l2.ObjDump(     'targets/netx4000_ca9_core0_cached_l2/netx4000_ramtest_ca9_core0_cached_l2.txt', elf_netx4000_s_ca9_core0_cached_l2, OBJDUMP_FLAGS=['--disassemble', '--source', '--all-headers', '--wide'])
bin_netx4000_s_ca9_core0_cached_l2 = env_netx4000_s_ca9_core0_cached.ObjCopy(     'targets/netx4000_ca9_core0_cached_l2/netx4000_ramtest_ca9_core0_cached_l2.bin', elf_netx4000_s_ca9_core0_cached_l2)






# ramtest for the CR7 in netx intram 0 (05080000-0509ffff), cache is enabled in init.s
env_netx4000_s_cr7_netx_intram_cached = env_netx4000_default.Clone()
env_netx4000_s_cr7_netx_intram_cached.Replace(LDFILE = 'src/netx4000/netx4000_cr7_netx_intram0.ld')
env_netx4000_s_cr7_netx_intram_cached.Append(CPPPATH = aCppPath)
env_netx4000_s_cr7_netx_intram_cached.Append(CPPDEFINES = [['CPU_CR7', '1']])
src_netx4000_s_cr7_netx_intram_cached = env_netx4000_s_cr7_netx_intram_cached.SetBuildPath('targets/netx4000_cr7_netx_intram_cached', 'src', sources_common+sources_standalone_netx4000_cr7_cached)
elf_netx4000_s_cr7_netx_intram_cached = env_netx4000_s_cr7_netx_intram_cached.Elf(         'targets/netx4000_cr7_netx_intram_cached/netx4000_ramtest_cr7_netx_intram_cached.elf', src_netx4000_s_cr7_netx_intram_cached + platform_lib_netx4000)
txt_netx4000_s_cr7_netx_intram_cached = env_netx4000_s_cr7_netx_intram_cached.ObjDump(     'targets/netx4000_cr7_netx_intram_cached/netx4000_ramtest_cr7_netx_intram_cached.txt', elf_netx4000_s_cr7_netx_intram_cached, OBJDUMP_FLAGS=['--disassemble', '--source', '--all-headers', '--wide'])
bin_netx4000_s_cr7_netx_intram_cached = env_netx4000_s_cr7_netx_intram_cached.ObjCopy(     'targets/netx4000_cr7_netx_intram_cached/netx4000_ramtest_cr7_netx_intram_cached.bin', elf_netx4000_s_cr7_netx_intram_cached)

# ramtest for CA9 in intram_rap2, L1+L2 caches are enabled in ca9_init.s
env_netx4000_s_ca9_intram_rap2_cached_l2 = env_netx4000_default.Clone()
env_netx4000_s_ca9_intram_rap2_cached_l2.Replace(LDFILE = 'src/netx4000/netx4000_ca9_intram_rap2.ld')
env_netx4000_s_ca9_intram_rap2_cached_l2.Append(CPPPATH = aCppPath)
env_netx4000_s_ca9_intram_rap2_cached_l2.Append(CPPPATH = ['src/netx4000', 'src/netx4000/CA9', '#platform/src/netx4000'])
env_netx4000_s_ca9_intram_rap2_cached_l2.Append(CPPDEFINES = [['CPU_CA9']])
src_netx4000_s_ca9_intram_rap2_cached_l2 = env_netx4000_s_ca9_intram_rap2_cached_l2.SetBuildPath('targets/netx4000_ca9_intram_rap2_cached_l2', 'src', sources_common+sources_standalone_netx4000_ca9_cached)
elf_netx4000_s_ca9_intram_rap2_cached_l2 = env_netx4000_s_ca9_intram_rap2_cached_l2.Elf(         'targets/netx4000_ca9_intram_rap2_cached_l2/netx4000_ramtest_ca9_intram_rap2_cached_l2.elf', src_netx4000_s_ca9_intram_rap2_cached_l2 + platform_lib_netx4000)
txt_netx4000_s_ca9_intram_rap2_cached_l2 = env_netx4000_s_ca9_intram_rap2_cached_l2.ObjDump(     'targets/netx4000_ca9_intram_rap2_cached_l2/netx4000_ramtest_ca9_intram_rap2_cached_l2.txt', elf_netx4000_s_ca9_intram_rap2_cached_l2, OBJDUMP_FLAGS=['--disassemble', '--source', '--all-headers', '--wide'])
bin_netx4000_s_ca9_intram_rap2_cached_l2 = env_netx4000_s_ca9_intram_rap2_cached_l2.ObjCopy(     'targets/netx4000_ca9_intram_rap2_cached_l2/netx4000_ramtest_ca9_intram_rap2_cached_l2.bin', elf_netx4000_s_ca9_intram_rap2_cached_l2)


# ramtest for CA9 in intram_rap2, L1 cache is enabled in ca9_init.s
env_netx4000_s_ca9_intram_rap2_cached = env_netx4000_default.Clone()
env_netx4000_s_ca9_intram_rap2_cached.Replace(LDFILE = 'src/netx4000/netx4000_ca9_intram_rap2.ld')
env_netx4000_s_ca9_intram_rap2_cached.Append(CPPPATH = aCppPath)
env_netx4000_s_ca9_intram_rap2_cached.Append(CPPPATH = ['src/netx4000', 'src/netx4000/CA9', '#platform/src/netx4000'])
env_netx4000_s_ca9_intram_rap2_cached.Append(CPPDEFINES = [['CPU_CA9'], ['CA9_NOC_ENABLE']])
src_netx4000_s_ca9_intram_rap2_cached = env_netx4000_s_ca9_intram_rap2_cached.SetBuildPath('targets/netx4000_ca9_intram_rap2_cached', 'src', sources_common+sources_standalone_netx4000_ca9_cached)
elf_netx4000_s_ca9_intram_rap2_cached = env_netx4000_s_ca9_intram_rap2_cached.Elf(         'targets/netx4000_ca9_intram_rap2_cached/netx4000_ramtest_ca9_intram_rap2_cached.elf', src_netx4000_s_ca9_intram_rap2_cached + platform_lib_netx4000)
txt_netx4000_s_ca9_intram_rap2_cached = env_netx4000_s_ca9_intram_rap2_cached.ObjDump(     'targets/netx4000_ca9_intram_rap2_cached/netx4000_ramtest_ca9_intram_rap2_cached.txt', elf_netx4000_s_ca9_intram_rap2_cached, OBJDUMP_FLAGS=['--disassemble', '--source', '--all-headers', '--wide'])
bin_netx4000_s_ca9_intram_rap2_cached = env_netx4000_s_ca9_intram_rap2_cached.ObjCopy(     'targets/netx4000_ca9_intram_rap2_cached/netx4000_ramtest_ca9_intram_rap2_cached.bin', elf_netx4000_s_ca9_intram_rap2_cached)


# ramtest for CA9 in intram_rap3, l1 cache is enabled in ca9_init.s
env_netx4000_s_ca9_intram_rap3_cached = env_netx4000_default.Clone()
env_netx4000_s_ca9_intram_rap3_cached.Replace(LDFILE = 'src/netx4000/netx4000_ca9_intram_rap3.ld')
env_netx4000_s_ca9_intram_rap3_cached.Append(CPPPATH = aCppPath)
env_netx4000_s_ca9_intram_rap3_cached.Append(CPPPATH = ['src/netx4000', 'src/netx4000/CA9', '#platform/src/netx4000'])
env_netx4000_s_ca9_intram_rap3_cached.Append(CPPDEFINES = [['CPU_CA9'], ['CA9_NO_L2C_ENABLE']])
src_netx4000_s_ca9_intram_rap3_cached = env_netx4000_s_ca9_intram_rap3_cached.SetBuildPath('targets/netx4000_ca9_intram_rap3_cached', 'src', sources_common+sources_standalone_netx4000_ca9_cached)
elf_netx4000_s_ca9_intram_rap3_cached = env_netx4000_s_ca9_intram_rap3_cached.Elf(         'targets/netx4000_ca9_intram_rap3_cached/netx4000_ramtest_ca9_intram_rap3_cached.elf', src_netx4000_s_ca9_intram_rap3_cached + platform_lib_netx4000)
txt_netx4000_s_ca9_intram_rap3_cached = env_netx4000_s_ca9_intram_rap3_cached.ObjDump(     'targets/netx4000_ca9_intram_rap3_cached/netx4000_ramtest_ca9_intram_rap3_cached.txt', elf_netx4000_s_ca9_intram_rap3_cached, OBJDUMP_FLAGS=['--disassemble', '--source', '--all-headers', '--wide'])
bin_netx4000_s_ca9_intram_rap3_cached = env_netx4000_s_ca9_intram_rap3_cached.ObjCopy(     'targets/netx4000_ca9_intram_rap3_cached/netx4000_ramtest_ca9_intram_rap3_cached.bin', elf_netx4000_s_ca9_intram_rap3_cached)

#----------------------------------------------------------------------------
# boot images
# core: R7, A9 core 0, A9 both cores, R7+A9
# speed: 400, 600 MHz
# cached/uncached
# Read latency 7, 8, 9

#----------------------------------------------------------------------------
# cifx 4000 SDRAM CR7 uncached
ramtest_standalone_cifx4000_sdram  = env_netx4000_s_cr7.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_cifx4000_sdram_cr7.bin',       
	'src/netx4000/cifx4000/CR7_cifx4000_1430100R1_sdram.xml',    
	HBOOTIMAGE_KNOWN_FILES=dict({'tElfCR7': elf_netx4000_s_cr7[0]}), 
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_cr7.Depends(ramtest_standalone_cifx4000_sdram, elf_netx4000_s_cr7)

# cifx 4000 SDRAM CR7 cached
ramtest_standalone_cifx4000_sdram  = env_netx4000_s_cr7.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_cifx4000_sdram_cr7_cached.bin',       
	'src/netx4000/cifx4000/CR7_cifx4000_1430100R1_sdram.xml',    
	HBOOTIMAGE_KNOWN_FILES=dict({'tElfCR7': elf_netx4000_s_cr7_cached[0]}), 
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_cr7.Depends(ramtest_standalone_cifx4000_sdram, elf_netx4000_s_cr7_cached)

# cifx 4000 SDRAM CR7+CA9 cached (L1+L2)
ramtest_standalone_cifx4000_sdram_cr7_ca9_cached_l2  = env_netx4000_s_cr7.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_cifx4000_sdram_cr7_ca9_cached_l2.bin',       
	'src/netx4000/cifx4000/CR7_CA9_cifX4000_1430100R1_sdram.xml',    
	HBOOTIMAGE_KNOWN_FILES=dict({
	'tElfCR7OpenFirewalls': elf_netx4000_cr7_openfirewalls[0],
	'tElfCR7'             : elf_netx4000_s_cr7_cached[0],
	'tElfCA9core0'        : elf_netx4000_s_ca9_core0_cached_l2[0],
	'tElfCA9core1'        : elf_netx4000_s_ca9_core1_cached[0]
	}),
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_cr7.Depends(ramtest_standalone_cifx4000_sdram_cr7_ca9_cached_l2, 
	elf_netx4000_cr7_openfirewalls +
	elf_netx4000_s_cr7_cached +
	elf_netx4000_s_ca9_core0_cached_l2 +
	elf_netx4000_s_ca9_core1_cached)



#----------------------------------------------------------------------------

# NXHX 4000 DDR RAM 400 MHz CR7 uncached
ramtest_standalone_nxhx4000_ddr3_400MHz_cr7 = env_netx4000_s_cr7.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_nxhx4000_ddr3_400MHz_cr7.bin', 
	'src/netx4000/nxhx4000/CR7_to_INTRAM_nxhx4000_ddr3_400MHz.xml', 
	HBOOTIMAGE_KNOWN_FILES=dict({'tElfCR7': elf_netx4000_s_cr7[0]}), 
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_cr7.Depends(ramtest_standalone_nxhx4000_ddr3_400MHz_cr7, elf_netx4000_s_cr7)

# NXHX 4000 DDR RAM 400 MHz CR7 cached
ramtest_standalone_nxhx4000_ddr3_400MHz_cr7_cached = env_netx4000_s_cr7.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_nxhx4000_ddr3_400MHz_cr7_cached.bin', 
	'src/netx4000/nxhx4000/CR7_to_INTRAM_nxhx4000_ddr3_400MHz.xml', 
	HBOOTIMAGE_KNOWN_FILES=dict({'tElfCR7': elf_netx4000_s_cr7_cached[0]}), 
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_cr7.Depends(ramtest_standalone_nxhx4000_ddr3_400MHz_cr7_cached, elf_netx4000_s_cr7_cached)


# NXHX 4000 DDR RAM 600 MHz CA9 core0 uncached
ramtest_standalone_nxhx4000_ddr3_400MHz_ca9core0 = env_netx4000_s_ca9_core0.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_nxhx4000_ddr3_400MHz_ca9core0.bin', 
	'src/netx4000/nxhx4000/CA9core0_to_INTRAM_nxhx4000_ddr3_400MHz.xml', 
	HBOOTIMAGE_KNOWN_FILES=dict({
	'tElfCR7OpenFirewalls': elf_netx4000_cr7_openfirewalls[0],
	'tElfCA9core0': elf_netx4000_s_ca9_core0[0]
	}),
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_ca9_core0.Depends(ramtest_standalone_nxhx4000_ddr3_400MHz_ca9core0, 
	elf_netx4000_cr7_openfirewalls +
	elf_netx4000_s_ca9_core0)

# NXHX 4000 DDR RAM 400 MHz CA9 core0 cached
ramtest_standalone_nxhx4000_ddr3_400MHz_ca9core0_cached = env_netx4000_s_ca9_core0_cached.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_nxhx4000_ddr3_400MHz_ca9core0_cached.bin', 
	'src/netx4000/nxhx4000/CA9core0_to_INTRAM_nxhx4000_ddr3_400MHz.xml', 
	HBOOTIMAGE_KNOWN_FILES=dict({
	'tElfCR7OpenFirewalls': elf_netx4000_cr7_openfirewalls[0],
	'tElfCA9core0': elf_netx4000_s_ca9_core0_cached[0]
	}),
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_ca9_core0.Depends(ramtest_standalone_nxhx4000_ddr3_400MHz_ca9core0_cached, 
	elf_netx4000_cr7_openfirewalls +
	elf_netx4000_s_ca9_core0_cached)

	
# NXHX 4000 DDR RAM 400 MHz CA9 core0/1 uncached
ramtest_standalone_nxhx4000_ddr3_400MHz_ca9 = env_netx4000_s_ca9_core0.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_nxhx4000_ddr3_400MHz_ca9.bin', 
	'src/netx4000/nxhx4000/CA9_to_INTRAM_nxhx4000_ddr3_400MHz.xml', 
	HBOOTIMAGE_KNOWN_FILES=dict({
	'tElfCR7OpenFirewalls': elf_netx4000_cr7_openfirewalls[0],
	'tElfCA9core0': elf_netx4000_s_ca9_core0[0],
	'tElfCA9core1': elf_netx4000_s_ca9_core1[0]
	}),
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_ca9_core0.Depends(ramtest_standalone_nxhx4000_ddr3_400MHz_ca9, 
	elf_netx4000_cr7_openfirewalls +
	elf_netx4000_s_ca9_core0 +
	elf_netx4000_s_ca9_core1)


# NXHX 4000 DDR RAM 400 MHz CA9 core0/1 cached
ramtest_standalone_nxhx4000_ddr3_400MHz_ca9_cached = env_netx4000_s_ca9_core0_cached.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_nxhx4000_ddr3_400MHz_ca9_cached.bin', 
	'src/netx4000/nxhx4000/CA9_to_INTRAM_nxhx4000_ddr3_400MHz.xml', 
	HBOOTIMAGE_KNOWN_FILES=dict({
	'tElfCR7OpenFirewalls': elf_netx4000_cr7_openfirewalls[0],
	'tElfCA9core0': elf_netx4000_s_ca9_core0_cached[0],
	'tElfCA9core1': elf_netx4000_s_ca9_core1_cached[0]
	}),
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_ca9_core0.Depends(ramtest_standalone_nxhx4000_ddr3_400MHz_ca9_cached, 
	elf_netx4000_cr7_openfirewalls +
	elf_netx4000_s_ca9_core0_cached +
	elf_netx4000_s_ca9_core1_cached)

# NXHX 4000 DDR RAM 400 MHz CA9 core0/1 cached + L2
ramtest_standalone_nxhx4000_ddr3_400MHz_ca9_cached_l2 = env_netx4000_s_ca9_core0_cached.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_nxhx4000_ddr3_400MHz_ca9_cached_l2.bin', 
	'src/netx4000/nxhx4000/CA9_to_INTRAM_nxhx4000_ddr3_400MHz.xml', 
	HBOOTIMAGE_KNOWN_FILES=dict({
	'tElfCR7OpenFirewalls': elf_netx4000_cr7_openfirewalls[0],
	'tElfCA9core0': elf_netx4000_s_ca9_core0_cached_l2[0],
	'tElfCA9core1': elf_netx4000_s_ca9_core1_cached[0]
	}),
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_ca9_core0.Depends(ramtest_standalone_nxhx4000_ddr3_400MHz_ca9_cached_l2, 
	elf_netx4000_cr7_openfirewalls +
	elf_netx4000_s_ca9_core0_cached_l2 +
	elf_netx4000_s_ca9_core1_cached)
	
	
# NXHX 4000 DDR RAM 400 MHz uncached, on all CPUs. 
ramtest_standalone_nxhx4000_ddr3_400MHz_cr7_ca9 = env_netx4000_s_cr7.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_nxhx4000_ddr3_400MHz_cr7_ca9.bin', 
	'src/netx4000/nxhx4000/CR7_CA9_to_INTRAM_nxhx4000_ddr3_400MHz.xml', 
	HBOOTIMAGE_KNOWN_FILES=dict({
	'tElfCR7OpenFirewalls': elf_netx4000_cr7_openfirewalls[0],
	'tElfCR7'             : elf_netx4000_s_cr7[0],
	'tElfCA9core0'        : elf_netx4000_s_ca9_core0[0],
	'tElfCA9core1'        : elf_netx4000_s_ca9_core1[0]
	}),
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_cr7.Depends(ramtest_standalone_nxhx4000_ddr3_400MHz_cr7_ca9, 
	elf_netx4000_cr7_openfirewalls +
	elf_netx4000_s_cr7 +
	elf_netx4000_s_ca9_core0 +
	elf_netx4000_s_ca9_core1)

# NXHX 4000 DDR RAM 400 MHz with caches enabled, on all CPUs. 
ramtest_standalone_nxhx4000_ddr3_400MHz_cr7_ca9_cached = env_netx4000_s_cr7.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_nxhx4000_ddr3_400MHz_cr7_ca9_cached.bin', 
	'src/netx4000/nxhx4000/CR7_CA9_to_INTRAM_nxhx4000_ddr3_400MHz.xml', 
	HBOOTIMAGE_KNOWN_FILES=dict({
	'tElfCR7OpenFirewalls': elf_netx4000_cr7_openfirewalls[0],
	'tElfCR7'             : elf_netx4000_s_cr7_cached[0],
	'tElfCA9core0'        : elf_netx4000_s_ca9_core0_cached[0],
	'tElfCA9core1'        : elf_netx4000_s_ca9_core1_cached[0]
	}),
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_cr7.Depends(ramtest_standalone_nxhx4000_ddr3_400MHz_cr7_ca9_cached, 
	elf_netx4000_cr7_openfirewalls +
	elf_netx4000_s_cr7_cached +
	elf_netx4000_s_ca9_core0_cached +
	elf_netx4000_s_ca9_core1_cached)

# NXHX 4000 DDR RAM 400 MHz with l1+l2 caches enabled, on all CPUs. 
ramtest_standalone_nxhx4000_ddr3_400MHz_cr7_ca9_cached_l2 = env_netx4000_s_cr7.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_nxhx4000_ddr3_400MHz_cr7_ca9_cached_l2.bin', 
	'src/netx4000/nxhx4000/CR7_CA9_to_INTRAM_nxhx4000_ddr3_400MHz.xml', 
	HBOOTIMAGE_KNOWN_FILES=dict({
	'tElfCR7OpenFirewalls': elf_netx4000_cr7_openfirewalls[0],
	'tElfCR7'             : elf_netx4000_s_cr7_cached[0],
	'tElfCA9core0'        : elf_netx4000_s_ca9_core0_cached_l2[0],
	'tElfCA9core1'        : elf_netx4000_s_ca9_core1_cached[0]
	}),
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_cr7.Depends(ramtest_standalone_nxhx4000_ddr3_400MHz_cr7_ca9_cached_l2, 
	elf_netx4000_cr7_openfirewalls +
	elf_netx4000_s_cr7_cached +
	elf_netx4000_s_ca9_core0_cached_l2 +
	elf_netx4000_s_ca9_core1_cached)

	
#----------------------------------------------------------------------------


# NXHX 4000 DDR RAM 600 MHz CR7 uncached
ramtest_standalone_nxhx4000_ddr3_600MHz_cr7 = env_netx4000_s_cr7.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_nxhx4000_ddr3_600MHz_cr7.bin', 
	'src/netx4000/nxhx4000/CR7_to_INTRAM_nxhx4000_ddr3_600MHz.xml', 
	HBOOTIMAGE_KNOWN_FILES=dict({
	'tElfCR7': elf_netx4000_s_cr7[0]
	}), 
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_cr7.Depends(ramtest_standalone_nxhx4000_ddr3_600MHz_cr7, elf_netx4000_s_cr7)

# NXHX 4000 DDR RAM 600 MHz CA9 core0 uncached
ramtest_standalone_nxhx4000_ddr3_600MHz_ca9core0 = env_netx4000_s_ca9_core0.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_nxhx4000_ddr3_600MHz_ca9core0.bin', 
	'src/netx4000/nxhx4000/CA9core0_to_INTRAM_nxhx4000_ddr3_600MHz.xml', 
	HBOOTIMAGE_KNOWN_FILES=dict({
	'tElfCR7OpenFirewalls': elf_netx4000_cr7_openfirewalls[0],
	'tElfCA9core0': elf_netx4000_s_ca9_core0[0]
	}),
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_ca9_core0.Depends(ramtest_standalone_nxhx4000_ddr3_600MHz_ca9core0, 
	elf_netx4000_cr7_openfirewalls +
	elf_netx4000_s_ca9_core0)

	
# NXHX 4000 DDR RAM 600 MHz CA9 core1 uncached
ramtest_standalone_nxhx4000_ddr3_600MHz_ca9core1 = env_netx4000_s_ca9_core1.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_nxhx4000_ddr3_600MHz_ca9core1.bin', 
	'src/netx4000/nxhx4000/CA9core1_to_INTRAM_nxhx4000_ddr3_600MHz.xml', 
	HBOOTIMAGE_KNOWN_FILES=dict({
	'tElfCR7OpenFirewalls': elf_netx4000_cr7_openfirewalls[0],
	'tElfCA9core1': elf_netx4000_s_ca9_core1[0]
	}),
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_ca9_core1.Depends(ramtest_standalone_nxhx4000_ddr3_600MHz_ca9core1, 
	elf_netx4000_cr7_openfirewalls +
	elf_netx4000_s_ca9_core1)


# NXHX 4000 DDR RAM 600 MHz CA9 core0/1 uncached
ramtest_standalone_nxhx4000_ddr3_600MHz_ca9 = env_netx4000_s_ca9_core0.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_nxhx4000_ddr3_600MHz_ca9.bin', 
	'src/netx4000/nxhx4000/CA9_to_INTRAM_nxhx4000_ddr3_600MHz.xml', 
	HBOOTIMAGE_KNOWN_FILES=dict({
	'tElfCR7OpenFirewalls': elf_netx4000_cr7_openfirewalls[0],
	'tElfCA9core0': elf_netx4000_s_ca9_core0[0],
	'tElfCA9core1': elf_netx4000_s_ca9_core1[0]
	}),
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_ca9_core0.Depends(ramtest_standalone_nxhx4000_ddr3_600MHz_ca9, 
	elf_netx4000_cr7_openfirewalls +
	elf_netx4000_s_ca9_core0 +
	elf_netx4000_s_ca9_core1)

# NXHX 4000 DDR RAM 600 MHz CR7 + CA9 core0 uncached
ramtest_standalone_nxhx4000_ddr3_600MHz_cr7_ca9core0 = env_netx4000_s_cr7.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_nxhx4000_ddr3_600MHz_cr7_ca9core0.bin', 
	'src/netx4000/nxhx4000/CR7_CA9core0_to_INTRAM_nxhx4000_ddr3_600MHz.xml', 
	HBOOTIMAGE_KNOWN_FILES=dict({
	'tElfCR7OpenFirewalls': elf_netx4000_cr7_openfirewalls[0],
	'tElfCR7': elf_netx4000_s_cr7[0],
	'tElfCA9core0': elf_netx4000_s_ca9_core0[0]
	}),
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_cr7.Depends(ramtest_standalone_nxhx4000_ddr3_600MHz_cr7_ca9core0, 
	elf_netx4000_cr7_openfirewalls +
	elf_netx4000_s_cr7 +
	elf_netx4000_s_ca9_core0)
	
# NXHX 4000 DDR RAM 600 MHz CR7 + CA9 core1 uncached
ramtest_standalone_nxhx4000_ddr3_600MHz_cr7_ca9core1 = env_netx4000_s_cr7.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_nxhx4000_ddr3_600MHz_cr7_ca9core1.bin', 
	'src/netx4000/nxhx4000/CR7_CA9core1_to_INTRAM_nxhx4000_ddr3_600MHz.xml', 
	HBOOTIMAGE_KNOWN_FILES=dict({
	'tElfCR7OpenFirewalls': elf_netx4000_cr7_openfirewalls[0],
	'tElfCR7': elf_netx4000_s_cr7[0],
	'tElfCA9core1': elf_netx4000_s_ca9_core1[0]
	}),
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_cr7.Depends(ramtest_standalone_nxhx4000_ddr3_600MHz_cr7_ca9core1, 
	elf_netx4000_cr7_openfirewalls +
	elf_netx4000_s_cr7 +
	elf_netx4000_s_ca9_core1)
	
# NXHX 4000 DDR RAM 600 MHz CR7 + CA9 core0/1 uncached
ramtest_standalone_nxhx4000_ddr3_600MHz_cr7_ca9 = env_netx4000_s_cr7.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_nxhx4000_ddr3_600MHz_cr7_ca9.bin', 
	'src/netx4000/nxhx4000/CR7_CA9_to_INTRAM_nxhx4000_ddr3_600MHz.xml', 
	HBOOTIMAGE_KNOWN_FILES=dict({
	'tElfCR7OpenFirewalls': elf_netx4000_cr7_openfirewalls[0],
	'tElfCR7': elf_netx4000_s_cr7[0],
	'tElfCA9core0': elf_netx4000_s_ca9_core0[0],
	'tElfCA9core1': elf_netx4000_s_ca9_core1[0]
	}),
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_cr7.Depends(ramtest_standalone_nxhx4000_ddr3_600MHz_cr7_ca9, 
	elf_netx4000_cr7_openfirewalls +
	elf_netx4000_s_cr7 +
	elf_netx4000_s_ca9_core0 +
	elf_netx4000_s_ca9_core1)

#----------------------------------------------------------------------------

# NXHX 4000 DDR RAM 600 MHz CR7 cached
ramtest_standalone_nxhx4000_ddr3_600MHz_cr7_cached = env_netx4000_s_cr7_cached.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_nxhx4000_ddr3_600MHz_cr7_cached.bin', 
	'src/netx4000/nxhx4000/CR7_to_INTRAM_nxhx4000_ddr3_600MHz.xml', 
	HBOOTIMAGE_KNOWN_FILES=dict({'tElfCR7': elf_netx4000_s_cr7_cached[0]}), 
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_cr7.Depends(ramtest_standalone_nxhx4000_ddr3_600MHz_cr7_cached, elf_netx4000_s_cr7_cached)


# NXHX 4000 DDR RAM 600 MHz CA9 core0 cached
ramtest_standalone_nxhx4000_ddr3_600MHz_ca9core0_cached = env_netx4000_s_ca9_core0_cached.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_nxhx4000_ddr3_600MHz_ca9core0_cached.bin', 
	'src/netx4000/nxhx4000/CA9core0_to_INTRAM_nxhx4000_ddr3_600MHz.xml', 
	HBOOTIMAGE_KNOWN_FILES=dict({
	'tElfCR7OpenFirewalls': elf_netx4000_cr7_openfirewalls[0],
	'tElfCA9core0': elf_netx4000_s_ca9_core0_cached[0]
	}),
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_ca9_core0.Depends(ramtest_standalone_nxhx4000_ddr3_600MHz_ca9core0_cached, 
	elf_netx4000_cr7_openfirewalls +
	elf_netx4000_s_ca9_core0_cached)


# NXHX 4000 DDR RAM 600 MHz CA9 core0/1 cached
ramtest_standalone_nxhx4000_ddr3_600MHz_ca9_cached = env_netx4000_s_ca9_core0_cached.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_nxhx4000_ddr3_600MHz_ca9_cached.bin', 
	'src/netx4000/nxhx4000/CA9_to_INTRAM_nxhx4000_ddr3_600MHz.xml', 
	HBOOTIMAGE_KNOWN_FILES=dict({
	'tElfCR7OpenFirewalls': elf_netx4000_cr7_openfirewalls[0],
	'tElfCA9core0': elf_netx4000_s_ca9_core0_cached[0],
	'tElfCA9core1': elf_netx4000_s_ca9_core1_cached[0]
	}),
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_ca9_core0.Depends(ramtest_standalone_nxhx4000_ddr3_600MHz_ca9_cached, 
	elf_netx4000_cr7_openfirewalls +
	elf_netx4000_s_ca9_core0_cached +
	elf_netx4000_s_ca9_core1_cached)
	
# NXHX 4000 DDR RAM 600 MHz with caches enabled, on all CPUs. 
ramtest_standalone_nxhx4000_ddr3_600MHz_cr7_ca9_cached = env_netx4000_s_cr7_cached.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_nxhx4000_ddr3_600MHz_cr7_ca9_cached.bin', 
	'src/netx4000/nxhx4000/CR7_CA9_to_INTRAM_nxhx4000_ddr3_600MHz.xml', 
	HBOOTIMAGE_KNOWN_FILES=dict({
	'tElfCR7OpenFirewalls': elf_netx4000_cr7_openfirewalls[0],
	'tElfCR7'             : elf_netx4000_s_cr7_cached[0],
	'tElfCA9core0'        : elf_netx4000_s_ca9_core0_cached[0],
	'tElfCA9core1'        : elf_netx4000_s_ca9_core1_cached[0]
	}),
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_cr7.Depends(ramtest_standalone_nxhx4000_ddr3_600MHz_cr7_ca9_cached, 
	elf_netx4000_cr7_openfirewalls +
	elf_netx4000_s_cr7_cached +
	elf_netx4000_s_ca9_core0_cached +
	elf_netx4000_s_ca9_core1_cached)



	
#----------------------------------------------------------------------------
# NXHX 4000 internal RAMs with l1+l2 caches enabled, on all CPUs. 
ramtest_standalone_nxhx4000_intrams_cr7_ca9_cached_l2 = env_netx4000_s_cr7.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_nxhx4000_intrams_cr7_ca9_cached_l2.bin', 
	'src/netx4000/nxhx4000/CR7_CA9_to_INTRAM_nxhx4000_intrams.xml', 
	HBOOTIMAGE_KNOWN_FILES=dict({
	'tElfCR7OpenFirewalls': elf_netx4000_cr7_openfirewalls[0],
	'tElfCR7'             : elf_netx4000_s_cr7_cached[0],
	'tElfCR7_netx_intram' : elf_netx4000_s_cr7_netx_intram_cached[0],
	'tElfCA9core0'        : elf_netx4000_s_ca9_core0_cached_l2[0],
	'tElfCA9core1'        : elf_netx4000_s_ca9_core1_cached[0], 
	'tElfCA9core0_rap2'   : elf_netx4000_s_ca9_intram_rap2_cached_l2[0],
	'tElfCA9core1_rap3'   : elf_netx4000_s_ca9_intram_rap3_cached[0],
	'tElfCR7SyncA9'       : elf_netx4000_cr7_sync_ca9[0]
	}),
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_cr7.Depends(ramtest_standalone_nxhx4000_intrams_cr7_ca9_cached_l2, 
	elf_netx4000_cr7_openfirewalls +
	elf_netx4000_s_cr7_cached +
	elf_netx4000_s_cr7_netx_intram_cached + 
	elf_netx4000_s_ca9_core0_cached_l2 +
	elf_netx4000_s_ca9_core0_cached +
	elf_netx4000_s_ca9_core1_cached + 
	elf_netx4000_s_ca9_intram_rap2_cached_l2 +
	elf_netx4000_s_ca9_intram_rap3_cached +
	elf_netx4000_cr7_sync_ca9)


	
	
#----------------------------------------------------------------------------
# NXHX 4000 internal RAMs with l1+l2 caches enabled, on CA9. 
ramtest_standalone_nxhx4000_intrams_ca9_cached_l2 = env_netx4000_s_ca9_core0_cached_l2.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_nxhx4000_intrams_ca9_cached_l2.bin', 
	'src/netx4000/nxhx4000/CA9_to_INTRAM_nxhx4000_intrams.xml', 
	HBOOTIMAGE_KNOWN_FILES=dict({
	'tElfCR7OpenFirewalls': elf_netx4000_cr7_openfirewalls[0],
	'tElfCA9core0'        : elf_netx4000_s_ca9_core0_cached_l2[0],
	'tElfCA9core1'        : elf_netx4000_s_ca9_core1_cached[0], 
	'tElfCA9core0_rap2'   : elf_netx4000_s_ca9_intram_rap2_cached_l2[0],
	'tElfCA9core1_rap3'   : elf_netx4000_s_ca9_intram_rap3_cached[0],
	'tElfCR7SyncA9'       : elf_netx4000_cr7_sync_ca9[0]
	}),
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_cr7.Depends(ramtest_standalone_nxhx4000_intrams_ca9_cached_l2, 
	elf_netx4000_cr7_openfirewalls +
	elf_netx4000_s_ca9_core0_cached_l2 +
	elf_netx4000_s_ca9_core1_cached + 
	elf_netx4000_s_ca9_intram_rap2_cached_l2 +
	elf_netx4000_s_ca9_intram_rap3_cached +
	elf_netx4000_cr7_sync_ca9)


#----------------------------------------------------------------------------
# NXHX 4000 internal RAMs with l1 cache enabled, on CA9. 
ramtest_standalone_nxhx4000_intrams_ca9_cached = env_netx4000_s_ca9_core0_cached.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_nxhx4000_intrams_ca9_cached.bin', 
	'src/netx4000/nxhx4000/CA9_to_INTRAM_nxhx4000_intrams.xml', 
	HBOOTIMAGE_KNOWN_FILES=dict({
	'tElfCR7OpenFirewalls': elf_netx4000_cr7_openfirewalls[0],
	'tElfCA9core0'        : elf_netx4000_s_ca9_core0_cached[0],
	'tElfCA9core1'        : elf_netx4000_s_ca9_core1_cached[0], 
	'tElfCA9core0_rap2'   : elf_netx4000_s_ca9_intram_rap2_cached[0],
	'tElfCA9core1_rap3'   : elf_netx4000_s_ca9_intram_rap3_cached[0],
	'tElfCR7SyncA9'       : elf_netx4000_cr7_sync_ca9[0]
	}),
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_cr7.Depends(ramtest_standalone_nxhx4000_intrams_ca9_cached, 
	elf_netx4000_cr7_openfirewalls +
	elf_netx4000_s_ca9_core0_cached +
	elf_netx4000_s_ca9_core1_cached + 
	elf_netx4000_s_ca9_intram_rap2_cached +
	elf_netx4000_s_ca9_intram_rap3_cached +
	elf_netx4000_cr7_sync_ca9)

	
#----------------------------------------------------------------------------
# NXHX 4000 internal RAMs with l1 cache enabled, on CR7
ramtest_standalone_nxhx4000_intrams_cr7_cached = env_netx4000_s_cr7.HBootImage(
	'targets/netx4000/standalone/ramtest_standalone_nxhx4000_intrams_cr7_cached.bin', 
	'src/netx4000/nxhx4000/CR7_to_INTRAM_nxhx4000_intrams.xml', 
	HBOOTIMAGE_KNOWN_FILES=dict({
	'tElfCR7'             : elf_netx4000_s_cr7_cached[0],
	'tElfCR7_netx_intram' : elf_netx4000_s_cr7_netx_intram_cached[0]
	}),
	HBOOTIMAGE_SNIPLIB_SEARCHPATHS=['ramtest/src/sniplib']
	)
env_netx4000_s_cr7.Depends(ramtest_standalone_nxhx4000_intrams_cr7_ca9_cached_l2, 
	elf_netx4000_s_cr7_cached +
	elf_netx4000_s_cr7_netx_intram_cached)

	
	
	
	
# # NXHX 4000 DDR RAM 400 MHz with caches and all CPUs
# # Tries to enable caches via separate boot chunks - does not work
# ramtest_standalone_nxhx4000_ddr3_400MHz_cr7_ca9_cache = env_netx4000_s_cr7.HBootImage(
# 	'targets/netx4000/standalone/ramtest_standalone_nxhx4000_ddr3_400MHz_cr7_ca9_cache.bin', 
# 	'src/netx4000/CR7_CA9_to_INTRAM_nxhx4000_ddr3_400MHz_chunks_enable_caches.xml', 
# 	HBOOTIMAGE_KNOWN_FILES=dict({
# 	'tElfCR7OpenFirewalls': elf_netx4000_cr7_openfirewalls[0],
# 	'tElfCR7InitCache'    : elf_netx4000_cr7_init_cache[0],
# 	'tElfCA9InitCache'    : elf_netx4000_ca9_init_cache[0],
# 	'tElfCR7'             : elf_netx4000_s_cr7[0],
# 	'tElfCA9core0'        : elf_netx4000_s_ca9_core0[0],
# 	'tElfCA9core1'        : elf_netx4000_s_ca9_core1[0],
# 	'tElfCR7SyncA9'       : elf_netx4000_cr7_sync_ca9[0],
# 	}))


# netx 500, 50, 10, 51, 52
env_netx500_s = env_netx500_default.Clone()
env_netx500_s.Replace(LDFILE = 'src/netx500/netx500.ld')
env_netx500_s.Append(CPPPATH = aCppPath)
src_netx500_s = env_netx500_s.SetBuildPath('targets/netx500/standalone', 'src', sources_common+sources_standalone)
elf_netx500_s = env_netx500_s.Elf('targets/netx500/standalone/ramtest_netx500.elf', src_netx500_s + platform_lib_netx500)
ramtest_standalone_netx500 = env_netx500_s.BootBlock('targets/netx500/standalone/ramtest_standalone_netx500.bin', elf_netx500_s, BOOTBLOCK_SRC={}, BOOTBLOCK_DST={})


env_netx56_s = env_netx56_default.Clone()
env_netx56_s.Replace(LDFILE = 'src/netx56/netx56.ld')
env_netx56_s.Append(CPPPATH = aCppPath)
src_netx56_s = env_netx56_s.SetBuildPath('targets/netx56/standalone', 'src', sources_common+sources_standalone)
elf_netx56_s = env_netx56_s.Elf('targets/netx56/standalone/ramtest_netx56.elf', src_netx56_s + platform_lib_netx56)
ramtest_standalone_netx56 = env_netx56_s.BootBlock('targets/netx56/standalone/ramtest_standalone_netx56.bin', elf_netx56_s, BOOTBLOCK_SRC={}, BOOTBLOCK_DST={})


env_netx50_s = env_netx50_default.Clone()
env_netx50_s.Replace(LDFILE = 'src/netx50/netx50.ld')
env_netx50_s.Append(CPPPATH = aCppPath)
src_netx50_s = env_netx50_s.SetBuildPath('targets/netx50/standalone', 'src', sources_common+sources_standalone)
elf_netx50_s = env_netx50_s.Elf('targets/netx50/standalone/ramtest_netx50.elf', src_netx50_s + platform_lib_netx50)
ramtest_standalone_netx50 = env_netx50_s.BootBlock('targets/netx50/standalone/ramtest_standalone_netx50.bin', elf_netx50_s, BOOTBLOCK_SRC={}, BOOTBLOCK_DST={})


env_netx10_s = env_netx10_default.Clone()
env_netx10_s.Replace(LDFILE = 'src/netx10/netx10.ld')
env_netx10_s.Append(CPPPATH = aCppPath)
src_netx10_s = env_netx10_s.SetBuildPath('targets/netx10/standalone', 'src', sources_common+sources_standalone)
elf_netx10_s = env_netx10_s.Elf('targets/netx10/standalone/ramtest_netx10.elf', src_netx10_s + platform_lib_netx10)
ramtest_standalone_netx10 = env_netx10_s.BootBlock('targets/netx10/standalone/ramtest_standalone_netx10.bin', elf_netx10_s, BOOTBLOCK_SRC={}, BOOTBLOCK_DST={})


Export('ramtest_standalone_netx500', 'ramtest_standalone_netx56', 'ramtest_standalone_netx50', 'ramtest_standalone_netx10')
Export('ramtest_standalone_cifx4000_sdram')
Export('ramtest_standalone_nxhx4000_ddr3_400MHz_cr7')

#----------------------------------------------------------------------------
#
# Build the debugger version.
#
env_netx500_d = env_netx500_default.Clone()
env_netx500_d.Replace(LDFILE = 'src/netx500/netx500.ld')
env_netx500_d.Append(CPPPATH = aCppPath)
src_netx500_d = env_netx500_d.SetBuildPath('targets/netx500/debugger', 'src', sources_common+sources_debugger)
elf_netx500_d = env_netx500_d.Elf('targets/netx500/debugger/ramtest_netx500.elf', src_netx500_d + platform_lib_netx500)

